@layer components {
  .accordionItem {
    border-block-end: solid 1px var(--grayscale-gray-2);
  }

  .panel {
  }

  .heading {
    font-weight: var(--font-weight-bold);
    margin: 0;
  }

  .toggle {
    background-color: transparent;
    border: 0;
    color: inherit;
    cursor: pointer;
    display: flex;
    font-weight: inherit;
    inline-size: 100%;
    justify-content: space-between;
    line-height: inherit;
    padding-block: var(--spacing-2);
    padding-inline: var(--spacing-2) var(--spacing-8);
    position: relative;
    text-align: left;
    text-decoration: none;
    transition: all var(--duration-short) var(--easing-ease-out);

    &:hover,
    &:focus,
    &:active {
      color: inherit;
    }
  }

  .number {
    .is-step-list & {
      background-color: var(--grayscale-gray-2);
      border-radius: 100%;
      display: inline-block;
      font-size: var(--font-size-4);
      height: var(--spacing-4);
      margin-right: var(--spacing-2);
      position: relative;
      width: var(--spacing-4);

      &::before {
        content: counter(step);
        counter-increment: step;
        display: inline-block;
        left: 50%;
        position: absolute;
        top: 50%;
        transform: translate(-50%, -50%);
      }
    }
  }

  .title {
    flex-basis: 100%;
  }

  .icon {
    block-size: 1.25rem;
    display: block;
    inline-size: 1.25rem;
    inset-block-start: 50%;
    inset-inline-end: var(--spacing-3);
    position: absolute;
    transform: translateY(-50%);

    &::before,
    &::after {
      background-color: var(--ui-accent);
      block-size: 2px;
      content: '';
      display: block;
      inline-size: 100%;
      inset-block-start: 50%;
      inset-inline-start: 50%;
      position: absolute;
      transform: translate(-50%, -50%);
      transform-origin: center;
      transition-duration: var(--duration-short);
      transition-property: transform;
      transition-timing-function: var(--easing-ease-out);
    }

    &::after {
      transform: translate(-50%, -50%) rotate(90deg);
    }

    [aria-expanded='true'] & {
      &::after {
        transform: translate(-50%, -50%) rotate(0deg);
      }
    }
  }

  .drawer {
    background: var(--grayscale-white);
  }

  .drawerInner {
    padding-block: 0 var(--spacing-2);
    padding-inline: var(--spacing-2) var(--spacing-8);

    > :last-child {
      margin-block-end: 0;
    }
  }
}
